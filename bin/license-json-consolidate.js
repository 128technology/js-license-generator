#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const minimist = require('minimist');
const chalk = require('chalk');

const argv = minimist(process.argv);

if (argv.help) {
  console.log('Usage:');
  console.log('license-json-consolidate [arguments]');
  console.log();
  console.log('Arguments:');
  console.log('--name=<string>          The name of the output file (default is "output.json".)');
  console.log(
    '--directory=<path>       An absolute path to JSON license files, generated by license-parser.js or js-license-generator.'
  );
  console.log('--help         This help.');
  process.exit(0);
}

const { name, directory } = argv;

let licenseConsolidation = {};

const results = fs.readdirSync(directory);
results.forEach(filName => {
  addEntry(path.resolve(directory, filName));
});

const outputName = name ? name : 'output';

fs.writeFileSync(`${outputName}.json`, JSON.stringify(licenseConsolidation), 'utf-8');
console.log(chalk.green(`Wrote file: ${outputName}.json`));

function addEntry(cacheFile) {
  if (fs.lstatSync(cacheFile).isDirectory()) {
    return;
  }
  const json = JSON.parse(fs.readFileSync(cacheFile, 'utf-8'));
  licenseConsolidation = Object.assign({}, licenseConsolidation, json);
}
